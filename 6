Write a program that uses a stack to convert a decimal number into an equivalent binary
number.


ANSWER

#include <stdio.h>

#define MAX_SIZE 100

struct Stack {
    int items[MAX_SIZE];
    int top;
};

void initialize(struct Stack *stack) {
    stack->top = -1;
}

int is_empty(struct Stack *stack) {
    return stack->top == -1;
}

int is_full(struct Stack *stack) {
    return stack->top == MAX_SIZE - 1;
}

void push(struct Stack *stack, int item) {
    if (!is_full(stack)) {
        stack->items[++stack->top] = item;
    } else {
        printf("Stack overflow\n");
    }
}

int pop(struct Stack *stack) {
    if (!is_empty(stack)) {
        return stack->items[stack->top--];
    } else {
        printf("Stack underflow\n");
        return -1; // Assuming -1 represents an error value
    }
}

void decimal_to_binary(int decimal_number) {
    struct Stack stack;
    initialize(&stack);

    while (decimal_number > 0) {
        int remainder = decimal_number % 2;
        push(&stack, remainder);
        decimal_number = decimal_number / 2;
    }

    printf("The binary representation is: ");
    while (!is_empty(&stack)) {
        printf("%d", pop(&stack));
    }
    printf("\n");
}

int main() {
    int decimal_number;
    printf("Enter a decimal number: ");
    scanf("%d", &decimal_number);

    decimal_to_binary(decimal_number);

    return 0;
}
